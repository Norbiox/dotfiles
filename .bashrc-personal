#!/bin/bash
export SUDO_ASKPASS=$HOME/.scripts/dmenu-askpass

#---History options---#
export HISTSIZE=1000000
export HISTFILESIZE=1000000
export HISTTIMEFORMAT='%F %T '                                                  # don't put duplicate lines or lines starting with space in the history.
export HISTCONTROL=ignoreboth:erasedup                                          # remove duplicates from historys
#export PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND"     # append to the history file immediately instead of saving on closing session 
shopt -s histappend                                                             # append to the history file, don't overwrite it 

## HSTR configuration
alias hh=hstr                    # hh to be alias for hstr
export HSTR_CONFIG=blacklist,prompt-bottom,raw-history-view,hicolor
export PROMPT_COMMAND="history -a; history -n; ${PROMPT_COMMAND}"
function hstrnotiocsti {
    { READLINE_LINE="$( { </dev/tty hstr ${READLINE_LINE}; } 2>&1 1>&3 3>&- )"; } 3>&1;
    READLINE_POINT=${#READLINE_LINE}
}
### if this is interactive shell, then bind hstr to Ctrl-r (for Vi mode check doc)
if [[ $- =~ .*i.* ]]; then bind -x '"\C-r": "hstrnotiocsti"'; fi
export HSTR_TIOCSTI=n


#---Terminal options---#
shopt -s checkwinsize                                                           # check the window size after each command and, if necessary, update the values of LINES and COLUMNS.

#ignore upper and lowercase when TAB completion
bind "set completion-ignore-case on"

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# PROMPT
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

color_prompt=yes
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;33m\][\t] \[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\t \u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Alias definitions in ~/.bash_aliases.
if [ -f ~/.bash-aliases ]; then
    . ~/.bash-aliases
fi

# Everything that I need only on this particular machine
if [ -f ~/.thismachineonlyrc ]; then
    . ~/.thismachineonlyrc
fi

# ssh-agent
if ! pgrep -u "$USER" ssh-agent > /dev/null; then
    ssh-agent -t 1h > "$XDG_RUNTIME_DIR/ssh-agent.env"
fi
if [[ ! "$SSH_AUTH_SOCK" ]]; then
    source "$XDG_RUNTIME_DIR/ssh-agent.env" > /dev/null
fi

# Bare repo config
alias config='git --git-dir=$HOME/.dotfiles --work-tree=$HOME'

# https://github.com/junegunn/fzf
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# Make ranger change current directory after quit
alias ranger='ranger --choosedir=$HOME/.rangerdir; LASTDIR=`cat $HOME/.rangerdir`; cd "$LASTDIR"'

# FZF settings
# export FZF_DEFAULT_COMMAND='ag --hidden --ignore .git -g ""'
export FZF_DEFAULT_COMMAND='rg --hidden -l ""'
export FZF_CTRL_T_COMMAND='rg --hidden -l ""'


# Zoxide setup
eval "$(zoxide init bash)"
